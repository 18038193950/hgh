(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0c17b4"],{"45da":function(n,e,t){"use strict";t.r(e);var a=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{staticClass:"app-container"},[t("el-collapse",{model:{value:n.activeNames,callback:function(e){n.activeNames=e},expression:"activeNames"}},[t("el-collapse-item",{attrs:{title:"判断URL ",name:"1"}},[t("pre",{directives:[{name:"highlight",rawName:"v-highlight"}]},[n._v("              "),t("code",{staticClass:"js"},[n._v("\n                 /* 判断URL */\n                export function validURL(url) {\n                  const reg = ${/^(https?|ftp):\\/\\/([a-zA-Z0-9.-]+(:[a-zA-Z0-9.&%$-]+)*@)*((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]?)(\\.(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9])){3}|([a-zA-Z0-9-]+\\.)*[a-zA-Z0-9-]+\\.(com|edu|gov|int|mil|net|org|biz|arpa|info|name|pro|aero|coop|museum|[a-zA-Z]{2}))(:[0-9]+)*(\\/($|[a-zA-Z0-9.,?'\\\\+&%$#=~_-]+))*$/}\n\n                  return reg.test(url)\n                }\n\n                export function isExternal(path) {\n                  return /^(https?:|mailto:|tel:)/.test(path)\n                }\n              ")]),n._v("\n              ")])]),t("el-collapse-item",{attrs:{title:"小写字母  大写字母",name:"2"}},[t("pre",{directives:[{name:"highlight",rawName:"v-highlight"}]},[n._v("              "),t("code",{staticClass:"js"},[n._v("\n              /**\n              * @param {string}  小写字母\n              * @returns {Boolean}\n              */\n              export function validLowerCase(str) {\n                const reg = /^[a-z]+$/\n                return reg.test(str)\n              }\n\n              /**\n              * @param {string} 大写字母\n              * @returns {Boolean}\n              */\n              export function validUpperCase(str) {\n                const reg = /^[A-Z]+$/\n                return reg.test(str)\n              }\n\n               /**\n                * @param {string} 大小写字母\n                * @returns {Boolean}\n                */\n                export function validAlphabets(str) {\n                  const reg = /^[A-Za-z]+$/\n                  return reg.test(str)\n                }\n              ")]),n._v("\n              ")])]),t("el-collapse-item",{attrs:{title:"邮箱",name:"3"}},[t("pre",{directives:[{name:"highlight",rawName:"v-highlight"}]},[n._v("              "),t("code",{staticClass:"js"},[n._v('\n              /**\n              * @param {string} email 邮箱\n              * @returns {Boolean}\n              */\n              export function validEmail(email) {\n                const reg = /^(([^<>()\\[\\]\\\\.,;:\\s@"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@"]+)*)|(".+"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n                return reg.test(email)\n              }\n              ')]),n._v("\n              ")])]),t("el-collapse-item",{attrs:{title:"是否是字符串 是否是数组",name:"4"}},[t("pre",{directives:[{name:"highlight",rawName:"v-highlight"}]},[n._v("              "),t("code",{staticClass:"js"},[n._v("\n                /**\n                  * @param {string} str  是否是字符串\n                  * @returns {Boolean}\n                  */\n                  export function isString(str) {\n                    if (typeof str === 'string' || str instanceof String) {\n                      return true\n                    }\n                    return false\n                  }\n\n                  /**\n                  * @param {Array} arg 是否是数组\n                  * @returns {Boolean}\n                  */\n                  export function isArray(arg) {\n                    if (typeof Array.isArray === 'undefined') {\n                      return Object.prototype.toString.call(arg) === '[object Array]'\n                    }\n                    return Array.isArray(arg)\n                  }\n              ")]),n._v("\n              ")])]),t("el-collapse-item",{attrs:{title:"手机号码-固话",name:"5"}},[t("pre",{directives:[{name:"highlight",rawName:"v-highlight"}]},[n._v("              "),t("code",{staticClass:"js"},[n._v("\n                  /* 手机号码 */\n                export function validateMobile(rule, value, callback) {\n                  const reg = /^(13[0-9]|14[579]|15[0-3,5-9]|16[6]|17[0135678]|18[0-9]|19[89])\\d{8}$/\n                  if (reg.test(value)) {\n                    callback()\n                  } else {\n                    return callback(new Error('请输入正确的手机号'))\n                  }\n                }\n\n                /* !/^[1][3,4,5,7,8][0-9]{9}$/.test(value) && // 手机号\n                !/^0[0-9]{2,3}-[0-9]{8}$/.test(value) // 固话 */\n              ")]),n._v("\n              ")])]),t("el-collapse-item",{attrs:{title:"小数点后面只留两位 ",name:"6"}},[t("pre",{directives:[{name:"highlight",rawName:"v-highlight"}]},[n._v("              "),t("code",{staticClass:"js"},[n._v("\n                /* 小数点后面只留两位*/\n\n                export function checkNumPot2(rule, value, callback) {\n                  const reg = /(^[1-9]([0-9]+)?(\\.[0-9]{1,2})?$)|(^(0){1}$)|(^[0-9]\\.[0-9]([0-9])?$)/\n                  if (!value) {\n                    return callback(new Error('请填写数字'))\n                  } else if (!reg.test(value)) {\n                    return callback(new Error('请填写数字,最多2位小数'))\n                  } else {\n                    callback()\n                  }\n                }\n\n              ")]),n._v("\n              ")])]),t("el-collapse-item",{attrs:{title:"非法字符 字母数字中文",name:"7"}},[t("pre",{directives:[{name:"highlight",rawName:"v-highlight"}]},[n._v("              "),t("code",{staticClass:"js"},[n._v("\n               /* 非法字符 字母数字中文*/\n              export function charActer(rule, value, callback) {\n                console.log(value)\n                const reg = /^[A-Za-z0-9\\u4e00-\\u9fa5]+$/\n                if (!value) {\n                  return callback(new Error('请填写用户名称'))\n                } else if (!reg.test(value)) {\n                  return callback(new Error('请输入用户名称,且不能是非法字符'))\n                } else {\n                  callback()\n                }\n              }\n              ")]),n._v("\n              ")])]),t("el-collapse-item",{attrs:{title:"非法字符 字母数字",name:"8"}},[t("pre",{directives:[{name:"highlight",rawName:"v-highlight"}]},[n._v("              "),t("code",{staticClass:"js"},[n._v("\n                 /* 非法字符 字母数字*/\n              export function charActer2(rule, value, callback) {\n                console.log(value)\n                const reg = /^[A-Za-z0-9]+$/\n                if (!reg.test(value)) {\n                  return callback(new Error('请输入字母或数字'))\n                } else {\n                  callback()\n                }\n              }\n              ")]),n._v("\n              ")])]),t("el-collapse-item",{attrs:{title:"日期分割",name:"9"}},[t("pre",{directives:[{name:"highlight",rawName:"v-highlight"}]},[n._v("              "),t("code",{staticClass:"js"},[n._v("\n              /**\n              * @param {string} 日期分割\n              * @returns {Boolean}\n              */\n              export function validAlphabets(str) {\n                const reg = /(\\d{4})(\\d{2})(\\d{2})/, '$1-$2-$3'\n                return reg.test(str)\n              }\n\n              ")]),n._v("\n              ")])]),t("el-collapse-item",{attrs:{title:"身份证校验",name:"10"}},[t("pre",{directives:[{name:"highlight",rawName:"v-highlight"}]},[n._v("              "),t("code",{staticClass:"js"},[n._v("\n              /**\n                * @param {string} 身份证校验\n                * @returns {Boolean}\n                */\n\n                export const identityCodeValid = (code) => {\n                  const city = { 11: '北京', 12: '天津', 13: '河北', 14: '山西', 15: '内蒙古', 21: '辽宁', 22: '吉林', 23: '黑龙江 ', 31: '上海', 32: '江苏', 33: '浙江', 34: '安徽', 35: '福建', 36: '江西', 37: '山东', 41: '河南', 42: '湖北', 43: '湖南', 44: '广东', 45: '广西', 46: '海南', 50: '重庆', 51: '四川', 52: '贵州', 53: '云南', 54: '西藏 ', 61: '陕西', 62: '甘肃', 63: '青海', 64: '宁夏', 65: '新疆', 71: '台湾', 81: '香港', 82: '澳门', 91: '国外' }\n                  let pass = true\n\n                  const checkDate = function(RQ) {\n                    const date = RQ\n                    const result = date.match(/^(\\d{1,4})(-|\\/)(\\d{1,2})\\2(\\d{1,2})$/)\n                    if (result == null) { return false }\n                    const d = new Date(result[1], result[3] - 1, result[4])\n\n                    return (d.getFullYear() === +result[1] && (d.getMonth() + 1) === +result[3] && d.getDate() === +result[4])\n                  }\n                  // 生日校验\n                  const date8 = code.substring(6, 10) + '-' + code.substring(10, 12) + '-' + code.substring(12, 14)\n\n                  // 判断格式是否正确\n                  if (!code || (!/^\\d{17}(\\d|x)$/i.test(code) && !/^\\d{15}$/i.test(code))) {\n                    // tip = \"身份证号格式错误\"\n                    pass = false\n                  } else if (!city[code.substr(0, 2)]) { // 判断前两位的地址编码是否正确\n                    // tip = \"地址编码错误\"\n                    pass = false\n                  } else if (code.length === 18 && !checkDate(date8)) { // 生日校验\n                    pass = false\n                  } else {\n                    // 18位身份证需要验证最后一位校验位\n                    if (code.length === 18) {\n                      code = code.split('')\n                      // ∑(ai×Wi)(mod 11)\n                      // 加权因子\n                      const factor = [7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2]\n                      // 校验位\n                      const parity = [1, 0, 'X', 9, 8, 7, 6, 5, 4, 3, 2]\n                      let sum = 0\n                      let ai = 0\n                      let wi = 0\n                      for (var p = 0; p < 17; p++) {\n                        ai = code[p]\n                        wi = factor[p]\n                        sum += ai * wi\n                      }\n                      const last = parity[sum % 11]\n                      if (last.toString() !== code[17]) {\n                        // tip = \"校验位错误\";\n                        pass = false\n                      }\n                    }\n                  }\n                  return pass\n                } \n                  return pass\n                }\n              ")]),n._v("\n              ")])]),t("el-collapse-item",{attrs:{title:"脱敏 - 手机号 - 身份证号 - 姓名",name:"11"}},[t("pre",{directives:[{name:"highlight",rawName:"v-highlight"}]},[n._v("              "),t("code",{staticClass:"js"},[n._v("\n                // 脱敏 手机号\n                export const getPhone = phone => phone.replace(/(\\d{3})\\d*(\\d{4})/, '$1****$2')\n                // 脱敏 身份证号\n                export const getIdCard = idCard => idCard.replace(/(\\d{3})\\d*(\\w{4})/, '$1***********$2')\n                // 脱敏 姓名\n                export const getName = name => name.replace(/.(?=.)/g, '*')\n              ")]),n._v("\n       ")])]),t("el-collapse-item",{attrs:{title:"金额添加千分位",name:"12"}},[t("pre",{directives:[{name:"highlight",rawName:"v-highlight"}]},[n._v("              "),t("code",{staticClass:"js"},[n._v("\n               const comdify = function(e) {\n                  if (!e) return e\n                  const n = e.toString()\n                  const str = n.split('.')\n                  const re = /\\d{1,3}(?=(\\d{3})+$)/g\n                  const n1 = str[0].replace(re, '$&,')\n                  return str.length > 1 && str[1] ? `${n1}.${str[1]}` : `${n1}.00`\n                }\n              ")]),n._v("\n       ")])])],1)],1)},r=[],s={name:"WhRules",data:function(){return{}}},l=s,i=t("2877"),c=Object(i["a"])(l,a,r,!1,null,"7af61870",null);e["default"]=c.exports}}]);
//# sourceMappingURL=chunk-2d0c17b4.4c2aec9d.js.map